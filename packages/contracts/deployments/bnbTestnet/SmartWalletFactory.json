{
  "address": "0x518B14d78DF55F51508281F58352E1607177B685",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pancakeV2Factory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_pancakeV3Factory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_weth9",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_initialFeeAssets",
          "type": "address[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "name": "SmartWalletCreationError",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "name": "UnSupportedFeeAsset",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_wallet",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "_callID",
          "type": "bytes32"
        }
      ],
      "name": "WalletCreated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "PANCAKE_V2_FACTORY",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PANCAKE_V3_FACTORY",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH9",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isSuppoeted",
          "type": "bool"
        }
      ],
      "name": "addSupportedFeeAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_impl",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_call",
          "type": "bytes"
        }
      ],
      "name": "createWallet",
      "outputs": [
        {
          "internalType": "contract IWallet",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeAsset",
          "type": "address"
        }
      ],
      "name": "queryFeeAsset",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "supportedFeeAssets",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_impl",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_call",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_nonce",
          "type": "uint256"
        }
      ],
      "name": "walletAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x4590a1936b87afeb79afc7fbff93079d5e9134cec5cce7f45b256f883672672b",
  "receipt": {
    "to": "0x4e59b44847b379578588920cA78FbF26c0B4956C",
    "from": "0xdBf48f5DB3d4bd13b9a29052947cB2edD6a2d132",
    "contractAddress": null,
    "transactionIndex": 3,
    "gasUsed": "1064371",
    "logsBloom": "0x
    "blockHash": "0x992c45365d4f47829cfc99d3b36f89d4a4270ff2bc6a11f63392beddf9ae05b4",
    "transactionHash": "0x4590a1936b87afeb79afc7fbff93079d5e9134cec5cce7f45b256f883672672b",
    "logs": [],
    "blockNumber": 39646834,
    "cumulativeGasUsed": "1261491",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x6725F303b657a9451d8BA641348b6761A6CC7a17",
    "0x0BFbCF9fa4f9C56B0F40a671Ad40E0805A091865",
    "0xCE79F78537f95a2256e76A3FE4b99D3af148833F",
    [
      "0x501B55184813f7a29eb98DECD8EC9B6D07DEB263",
      "0x6F451Eb92d7dE92DdF6939d9eFCE6799246B3a4b",
      "0xCE79F78537f95a2256e76A3FE4b99D3af148833F"
    ]
  ],
  "numDeployments": 20,
  "solcInputHash": "e19069992a7c36fcfd744f12175c08e2",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pancakeV2Factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_pancakeV3Factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_weth9\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_initialFeeAssets\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"SmartWalletCreationError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"UnSupportedFeeAsset\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_callID\",\"type\":\"bytes32\"}],\"name\":\"WalletCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PANCAKE_V2_FACTORY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PANCAKE_V3_FACTORY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isSuppoeted\",\"type\":\"bool\"}],\"name\":\"addSupportedFeeAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_impl\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_call\",\"type\":\"bytes\"}],\"name\":\"createWallet\",\"outputs\":[{\"internalType\":\"contract IWallet\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeAsset\",\"type\":\"address\"}],\"name\":\"queryFeeAsset\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"supportedFeeAssets\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_impl\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_call\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"name\":\"walletAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SmartWalletFactory.sol\":\"SmartWalletFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967 {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/ERC1967/ERC1967Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Proxy.sol\\\";\\nimport \\\"./ERC1967Upgrade.sol\\\";\\n\\n/**\\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\\n * implementation address that can be changed. This address is stored in storage in the location specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\\n * implementation behind the proxy.\\n */\\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\\n    /**\\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\\n     *\\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\\n     * function call, and allows initializing the storage of the proxy like a Solidity constructor.\\n     */\\n    constructor(address _logic, bytes memory _data) payable {\\n        _upgradeToAndCall(_logic, _data, false);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _implementation() internal view virtual override returns (address impl) {\\n        return ERC1967Upgrade._getImplementation();\\n    }\\n}\\n\",\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeacon.sol\\\";\\nimport \\\"../../interfaces/IERC1967.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967Upgrade is IERC1967 {\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(Address.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            Address.isContract(IBeacon(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overridden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\",\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n     /**\\n      * @dev Returns true if `account` is a contract.\\n      *\\n      * [IMPORTANT]\\n      * ====\\n      * It is unsafe to assume that an address for which this function returns\\n      * false is an externally-owned account (EOA) and not a contract.\\n      *\\n      * Among others, `isContract` will return false for the following\\n      * types of addresses:\\n      *\\n      *  - an externally-owned account\\n      *  - a contract in construction\\n      *  - an address where a contract will be created\\n      *  - an address where a contract lived, but was destroyed\\n      *\\n      * Furthermore, `isContract` will also return true if the target contract within\\n      * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n      * which only has an effect at the end of a transaction.\\n      * ====\\n      *\\n      * [IMPORTANT]\\n      * ====\\n      * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n      *\\n      * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n      * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n      * constructor.\\n      * ====\\n      */\\n     function isContract(address account) internal view returns (bool) {\\n          // This method relies on extcodesize/address.code.length, which returns 0\\n          // for contracts in construction, since the code is only stored at the end\\n          // of the constructor execution.\\n\\n          return account.code.length > 0;\\n     }\\n\\n     /**\\n      * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n      * `recipient`, forwarding all available gas and reverting on errors.\\n      *\\n      * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n      * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n      * imposed by `transfer`, making them unable to receive funds via\\n      * `transfer`. {sendValue} removes this limitation.\\n      *\\n      * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n      *\\n      * IMPORTANT: because control is transferred to `recipient`, care must be\\n      * taken to not create reentrancy vulnerabilities. Consider using\\n      * {ReentrancyGuard} or the\\n      * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n      */\\n     function sendValue(address payable recipient, uint256 amount) internal {\\n          require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n          (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n          require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n     }\\n\\n     /**\\n      * @dev Performs a Solidity function call using a low level `call`. A\\n      * plain `call` is an unsafe replacement for a function call: use this\\n      * function instead.\\n      *\\n      * If `target` reverts with a revert reason, it is bubbled up by this\\n      * function (like regular Solidity function calls).\\n      *\\n      * Returns the raw returned data. To convert to the expected return value,\\n      * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n      *\\n      * Requirements:\\n      *\\n      * - `target` must be a contract.\\n      * - calling `target` with `data` must not revert.\\n      *\\n      * _Available since v3.1._\\n      */\\n     function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n          return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n     }\\n\\n     /**\\n      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n      * `errorMessage` as a fallback revert reason when `target` reverts.\\n      *\\n      * _Available since v3.1._\\n      */\\n     function functionCall(\\n          address target,\\n          bytes memory data,\\n          string memory errorMessage\\n     ) internal returns (bytes memory) {\\n          return functionCallWithValue(target, data, 0, errorMessage);\\n     }\\n\\n     /**\\n      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n      * but also transferring `value` wei to `target`.\\n      *\\n      * Requirements:\\n      *\\n      * - the calling contract must have an ETH balance of at least `value`.\\n      * - the called Solidity function must be `payable`.\\n      *\\n      * _Available since v3.1._\\n      */\\n     function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n          return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n     }\\n\\n     /**\\n      * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n      * with `errorMessage` as a fallback revert reason when `target` reverts.\\n      *\\n      * _Available since v3.1._\\n      */\\n     function functionCallWithValue(\\n          address target,\\n          bytes memory data,\\n          uint256 value,\\n          string memory errorMessage\\n     ) internal returns (bytes memory) {\\n          require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n          (bool success, bytes memory returndata) = target.call{value: value}(data);\\n          return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n     }\\n\\n     /**\\n      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n      * but performing a static call.\\n      *\\n      * _Available since v3.3._\\n      */\\n     function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n          return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n     }\\n\\n     /**\\n      * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n      * but performing a static call.\\n      *\\n      * _Available since v3.3._\\n      */\\n     function functionStaticCall(\\n          address target,\\n          bytes memory data,\\n          string memory errorMessage\\n     ) internal view returns (bytes memory) {\\n          (bool success, bytes memory returndata) = target.staticcall(data);\\n          return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n     }\\n\\n     /**\\n      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n      * but performing a delegate call.\\n      *\\n      * _Available since v3.4._\\n      */\\n     function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n          return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n     }\\n\\n     /**\\n      * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n      * but performing a delegate call.\\n      *\\n      * _Available since v3.4._\\n      */\\n     function functionDelegateCall(\\n          address target,\\n          bytes memory data,\\n          string memory errorMessage\\n     ) internal returns (bytes memory) {\\n          (bool success, bytes memory returndata) = target.delegatecall(data);\\n          return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n     }\\n\\n     /**\\n      * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n      * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n      *\\n      * _Available since v4.8._\\n      */\\n     function verifyCallResultFromTarget(\\n          address target,\\n          bool success,\\n          bytes memory returndata,\\n          string memory errorMessage\\n     ) internal view returns (bytes memory) {\\n          if (success) {\\n               if (returndata.length == 0) {\\n                    // only check isContract if the call was successful and the return data is empty\\n                    // otherwise we already know that it was a contract\\n                    require(isContract(target), \\\"Address: call to non-contract\\\");\\n               }\\n               return returndata;\\n          } else {\\n               _revert(returndata, errorMessage);\\n          }\\n     }\\n\\n     /**\\n      * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n      * revert reason or using the provided one.\\n      *\\n      * _Available since v4.3._\\n      */\\n     function verifyCallResult(\\n          bool success,\\n          bytes memory returndata,\\n          string memory errorMessage\\n     ) internal pure returns (bytes memory) {\\n          if (success) {\\n               return returndata;\\n          } else {\\n               _revert(returndata, errorMessage);\\n          }\\n     }\\n\\n     function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n          // Look for revert reason and bubble it up if present\\n          if (returndata.length > 0) {\\n               // The easiest way to bubble the revert reason is using memory via assembly\\n               /// @solidity memory-safe-assembly\\n               assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n               }\\n          } else {\\n               revert(errorMessage);\\n          }\\n     }\\n}\\n\",\"keccak256\":\"0x2910cc8298163cc38e45b6d489ff8ed62f24fcbf959ab415e460a0e7f5a6df10\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\"},\"contracts/SmartWalletFactory.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.6;\\n\\nimport {ERC1967Proxy} from \\\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\\\";\\nimport {IWalletFactory} from \\\"./interfaces/IWalletFactory.sol\\\";\\nimport {IWallet} from \\\"./interfaces/IWallet.sol\\\";\\n\\ncontract SmartWalletFactory is IWalletFactory {\\n  address public WETH9;\\n  address public PANCAKE_V2_FACTORY;\\n  address public PANCAKE_V3_FACTORY;\\n\\n  error UnSupportedFeeAsset(string message);\\n  error SmartWalletCreationError(string message);\\n\\n  mapping(address => bool) public supportedFeeAssets;\\n  mapping(bytes32 => uint256) public nonces;\\n\\n  event WalletCreated(address indexed _wallet, bytes32 indexed _callID);\\n\\n  constructor(address _pancakeV2Factory, address _pancakeV3Factory, address _weth9, address[] memory _initialFeeAssets) {\\n    WETH9 = _weth9;\\n    PANCAKE_V2_FACTORY = _pancakeV2Factory;\\n    PANCAKE_V3_FACTORY = _pancakeV3Factory;\\n\\n    for (uint8 i = 0; i < _initialFeeAssets.length; i++) {\\n      supportedFeeAssets[_initialFeeAssets[i]] = true;\\n    }\\n  }\\n\\n  function createWallet(address _impl, bytes memory _call) external payable returns (IWallet) {\\n    bytes32 callID = keccak256(_call);\\n    // salt is derived from call hash and nonce, this is to allow the same user to\\n    // create and control multiple SmartWallets with the same private key\\n    ERC1967Proxy wallet_ = new ERC1967Proxy{salt: keccak256(abi.encode(callID, nonces[callID]++))}(address(_impl), _call);\\n\\n    emit WalletCreated(address(wallet_), callID);\\n    IWallet wallet = IWallet(payable(wallet_));\\n\\n    (bool ok, ) = address(wallet).call{value: msg.value}(\\\"\\\");\\n    if (!ok) revert SmartWalletCreationError(\\\"SmartWallet: Failed to creation Fee\\\");\\n    return wallet;\\n  }\\n\\n  function walletAddress(address _impl, bytes memory _call, uint256 _nonce) public view returns (address) {\\n    bytes32 callID = keccak256(_call);\\n    return\\n      address(\\n        uint160(\\n          uint(\\n            keccak256(\\n              abi.encodePacked(\\n                bytes1(0xff),\\n                address(this),\\n                keccak256(abi.encode(callID, _nonce)),\\n                keccak256(abi.encodePacked(type(ERC1967Proxy).creationCode, abi.encode(_impl, _call)))\\n              )\\n            )\\n          )\\n        )\\n      );\\n  }\\n\\n  function queryFeeAsset(address _feeAsset) public view returns (bool) {\\n    if (!supportedFeeAssets[_feeAsset]) revert UnSupportedFeeAsset(\\\"unsuppurted Fee Asset\\\");\\n    return supportedFeeAssets[_feeAsset];\\n  }\\n\\n  function addSupportedFeeAsset(address _asset, bool _isSuppoeted) external {\\n    supportedFeeAssets[_asset] = _isSuppoeted;\\n  }\\n}\\n\",\"keccak256\":\"0x67e8e7d31d0fa1b66072e269f13dea099bf8dd0bb36b75e6f316e083bd43b3b8\",\"license\":\"Unlicense\"},\"contracts/interfaces/IWallet.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.6;\\n\\ninterface IWallet {\\n  event LogReceivedEther(address indexed _from, uint256 _amount);\\n\\n  event LogCall(address indexed _contract, uint256 _value, bytes _data);\\n\\n  event Approval(address indexed owner, address indexed token, address indexed spender, uint160 amount, uint48 expiration);\\n\\n  event Permit(address indexed owner, address indexed token, address indexed spender, uint160 amount, uint48 expiration, uint48 nonce);\\n\\n  event WalletOpRecoveryResult(address indexed signer, bytes32 dataHash, bytes signature, address wallet, uint256 nonce);\\n\\n  struct ECDSAExec {\\n    AllowanceOp allowanceOp;\\n    UserOp[] userOps;\\n    UserOp[] bridgeOps;\\n    address wallet;\\n    uint256 nonce;\\n    uint256 chainID;\\n    uint256 bridgeChainID;\\n    uint256 sigChainID;\\n  }\\n\\n  struct UserOp {\\n    address to;\\n    uint256 amount;\\n    uint256 chainId;\\n    bytes data;\\n  }\\n\\n  struct AllowanceOpDetails {\\n    address token;\\n    uint160 amount;\\n    uint48 expiration;\\n    uint48 nonce;\\n  }\\n\\n  struct AllowanceOp {\\n    AllowanceOpDetails[] details;\\n    address spender;\\n    uint256 sigDeadline;\\n  }\\n\\n  struct PackedAllowance {\\n    uint160 amount;\\n    uint48 expiration;\\n    uint48 nonce;\\n  }\\n\\n  struct ECDSAExecValidationDetails {\\n    address signer;\\n    bytes32 dataHash;\\n    bytes signature;\\n    address wallet;\\n    uint256 nonce;\\n  }\\n\\n  receive() external payable;\\n\\n  function nonce() external view returns (uint256);\\n\\n  function owner() external view returns (address);\\n\\n  function exec(ECDSAExec memory _walletExec, bytes memory _signature) external;\\n\\n  function execFomEoa(UserOp[] calldata userOps) external;\\n\\n  function allowance(address user, address token, address spender) external view returns (uint160 amount, uint48 expiration, uint48 nonce);\\n\\n  function approve(address token, address spender, uint160 amount, uint48 expiration) external;\\n\\n  function transferFrom(address from, address to, uint160 amount, address token) external;\\n}\\n\",\"keccak256\":\"0x5f1da757ffd369c9fd60d25766a0d90bc8b6348e9fb9c51305ae24052597221b\",\"license\":\"Unlicense\"},\"contracts/interfaces/IWalletFactory.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.6;\\n\\nimport \\\"./IWallet.sol\\\";\\n\\ninterface IWalletFactory {\\n     function createWallet(address _impl, bytes memory _call) external payable returns (IWallet);\\n\\n     function walletAddress(address _impl, bytes memory _call, uint256 _nonce) external view returns (address);\\n}\\n\",\"keccak256\":\"0x85ffd17dc6ebb63271d34c2f231dbaa96ad96bbfa24d33e530b6ea71a177cf03\",\"license\":\"Unlicense\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 6646,
        "contract": "contracts/SmartWalletFactory.sol:SmartWalletFactory",
        "label": "WETH9",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 6648,
        "contract": "contracts/SmartWalletFactory.sol:SmartWalletFactory",
        "label": "PANCAKE_V2_FACTORY",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 6650,
        "contract": "contracts/SmartWalletFactory.sol:SmartWalletFactory",
        "label": "PANCAKE_V3_FACTORY",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 6662,
        "contract": "contracts/SmartWalletFactory.sol:SmartWalletFactory",
        "label": "supportedFeeAssets",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 6666,
        "contract": "contracts/SmartWalletFactory.sol:SmartWalletFactory",
        "label": "nonces",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_bytes32,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}